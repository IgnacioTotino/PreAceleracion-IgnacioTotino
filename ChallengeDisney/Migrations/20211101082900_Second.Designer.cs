// <auto-generated />
using System;
using ChallengeDisney.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChallengeDisney.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20211101082900_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MoviesData")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChallengeDisney.Entidades.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoviesAssociated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MoviesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MoviesId");

                    b.ToTable("Charaters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 19,
                            History = "IdontKnow",
                            Image = "hola",
                            MoviesAssociated = "One Piece",
                            Name = "Luffy",
                            Weight = 40
                        },
                        new
                        {
                            Id = 2,
                            Age = 21,
                            History = "Wano",
                            Image = "Holis",
                            MoviesAssociated = "One Piece",
                            Name = "Zoro",
                            Weight = 70
                        });
                });

            modelBuilder.Entity("ChallengeDisney.Entidades.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriesAssociated")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("ChallengeDisney.Entidades.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharacterAssociated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenresId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenresId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("ChallengeDisney.Entidades.Character", b =>
                {
                    b.HasOne("ChallengeDisney.Entidades.Movie", "Movies")
                        .WithMany("Characters")
                        .HasForeignKey("MoviesId");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("ChallengeDisney.Entidades.Movie", b =>
                {
                    b.HasOne("ChallengeDisney.Entidades.Genre", "Genres")
                        .WithMany("Movies")
                        .HasForeignKey("GenresId");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("ChallengeDisney.Entidades.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("ChallengeDisney.Entidades.Movie", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
